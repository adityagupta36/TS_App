services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      mysqldb:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/timesheet_app
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=Aditya@12
#      - SPRING_SECURITY_USER_NAME=admin1@gmail.com
#      - SPRING_SECURITY_USER_PASSWORD={noop}admin1
#      - SPRING_SECURITY_USER_ROLES=ROLE_ADMIN
      - SPRING_APPLICATION_JSON={"spring.security.user.name":"admin1@gmail.com","spring.security.user.password":"{noop}admin1","spring.security.user.roles":"ROLE_ADMIN"}

#      - SPRING_SECURITY_USER_NAME=admin1@gmail.com
#      - SPRING_SECURITY_USER_PASSWORD=admin1
#      - SPRING_SECURITY_USER_ROLES=ROLE_ADMIN

    networks:
      - springboot-mysql-network
  mysqldb:
    image: mysql:8.0.33
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=timesheet_app
      - MYSQL_ROOT_PASSWORD=Aditya@12
    volumes:
      - mysql-data:/var/lib/mysql
      - ./db-init/dump.sql:/docker-entrypoint-initdb.d/dump.sql

    networks:
      - springboot-mysql-network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "mysqldb"]
      retries: 10
      interval: 3s
      timeout: 30s
volumes:
  mysql-data:
networks:
  springboot-mysql-network:
    name: springboot-mysql-network